@model EduSphere.Models.Announcement
@{
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
    ViewBag.Title = "Duyuru Düzenle";
    ViewBag.Active = "announcements";
}

<div class="content-card">
    <div class="p-3 border-bottom">
        <div class="d-flex justify-content-between align-items-center">
            <h2 class="page-title mb-0">
                <i class="fas fa-edit me-2"></i>Duyuru Düzenle
            </h2>
            <div class="btn-group">
                <a href="@Url.Action("Details", "Announcement", new { id = Model.Id })" class="btn btn-info">
                    <i class="fas fa-eye me-2"></i>Görüntüle
                </a>
                <a href="@Url.Action("Index", "Announcement")" class="btn btn-secondary">
                    <i class="fas fa-arrow-left me-2"></i>Geri Dön
                </a>
            </div>
        </div>
    </div>

    <div class="p-4">
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <i class="fas fa-exclamation-circle me-2"></i>
                @TempData["ErrorMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        }

        <form asp-action="Edit" asp-route-id="@Model.Id" method="post" class="needs-validation" novalidate>
            @Html.AntiForgeryToken()

            <div class="row">
                <div class="col-md-8">
                    <div class="mb-3">
                        <label for="Title" class="form-label">
                            <i class="fas fa-heading me-1"></i>Duyuru Başlığı <span class="text-danger">*</span>
                        </label>
                        <input type="text"
                               class="form-control @(ViewData.ModelState["Title"]?.Errors.Count > 0 ? "is-invalid" : "")"
                               id="Title"
                               name="Title"
                               value="@Model.Title"
                               placeholder="Duyuru başlığını girin..."
                               maxlength="200"
                               required>
                        @if (ViewData.ModelState["Title"]?.Errors.Count > 0)
                        {
                            <div class="invalid-feedback">
                                @ViewData.ModelState["Title"].Errors[0].ErrorMessage
                            </div>
                        }
                        <div class="form-text">Maksimum 200 karakter</div>
                    </div>

                    <div class="mb-3">
                        <label for="Content" class="form-label">
                            <i class="fas fa-file-alt me-1"></i>Duyuru İçeriği <span class="text-danger">*</span>
                        </label>
                        <textarea class="form-control @(ViewData.ModelState["Content"]?.Errors.Count > 0 ? "is-invalid" : "")"
                                  id="Content"
                                  name="Content"
                                  rows="8"
                                  placeholder="Duyuru içeriğini girin..."
                                  required>@Model.Content</textarea>
                        @if (ViewData.ModelState["Content"]?.Errors.Count > 0)
                        {
                            <div class="invalid-feedback">
                                @ViewData.ModelState["Content"].Errors[0].ErrorMessage
                            </div>
                        }
                        <div class="form-text">Duyuru detaylarını açık ve anlaşılır şekilde yazın</div>
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="info-card">
                        <h5 class="card-title">
                            <i class="fas fa-info-circle me-2"></i>Duyuru Bilgileri
                        </h5>
                        <div class="info-item">
                            <label>Oluşturan:</label>
                            <span class="value">@Model.Author</span>
                        </div>
                        <div class="info-item">
                            <label>Oluşturma Tarihi:</label>
                            <span class="value">@Model.CreatedAt.ToString("dd MMMM yyyy, HH:mm")</span>
                        </div>
                        <div class="info-item">
                            <label>Durum:</label>
                            <span class="badge bg-success">Aktif</span>
                        </div>
                    </div>

                    <div class="preview-card mt-3">
                        <h6><i class="fas fa-eye me-2"></i>Önizleme</h6>
                        <div class="preview-content">
                            <div class="preview-title">
                                <strong id="previewTitle">@Model.Title</strong>
                            </div>
                            <div class="preview-meta">
                                <small class="text-muted">
                                    <i class="fas fa-user me-1"></i>@Model.Author •
                                    <i class="fas fa-calendar me-1"></i>@Model.CreatedAt.ToString("dd MMM yyyy")
                                </small>
                            </div>
                            <div class="preview-text" id="previewContent">
                                @Model.Content
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="mt-4 border-top pt-3">
                <div class="d-flex justify-content-between">
                    <a href="@Url.Action("Index", "Announcement")" class="btn btn-outline-secondary">
                        <i class="fas fa-times me-2"></i>İptal
                    </a>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save me-2"></i>Değişiklikleri Kaydet
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

<style>
    .info-card {
        background: #f8f9fa;
        border: 1px solid #e9ecef;
        border-radius: 8px;
        padding: 1rem;
    }

    .info-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 0.75rem;
        padding-bottom: 0.5rem;
        border-bottom: 1px solid #e9ecef;
    }

        .info-item:last-child {
            margin-bottom: 0;
            border-bottom: none;
        }

        .info-item label {
            font-weight: 600;
            color: #495057;
            margin-bottom: 0;
        }

        .info-item .value {
            color: #6c757d;
            font-size: 0.9rem;
        }

    .preview-card {
        background: #f8f9fa;
        border: 1px solid #e9ecef;
        border-radius: 8px;
        padding: 1rem;
    }

    .preview-content {
        background: white;
        border-radius: 6px;
        padding: 1rem;
        margin-top: 0.5rem;
    }

    .preview-title {
        font-size: 1.1rem;
        margin-bottom: 0.5rem;
    }

    .preview-meta {
        margin-bottom: 0.75rem;
        padding-bottom: 0.5rem;
        border-bottom: 1px solid #e9ecef;
    }

    .preview-text {
        line-height: 1.6;
        color: #495057;
    }
</style>

<script>
    // Real-time preview
    document.getElementById('Title').addEventListener('input', function() {
        document.getElementById('previewTitle').textContent = this.value;
    });

    document.getElementById('Content').addEventListener('input', function() {
        document.getElementById('previewContent').textContent = this.value;
    });

    // Form validation
    (function() {
        'use strict';
        window.addEventListener('load', function() {
            var forms = document.getElementsByClassName('needs-validation');
            var validation = Array.prototype.filter.call(forms, function(form) {
                form.addEventListener('submit', function(event) {
                    if (form.checkValidity() === false) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        }, false);
    })();
</script>