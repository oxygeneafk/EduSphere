@model List<EduSphere.Models.ExamCalendarViewModel>
@{
    ViewData["Title"] = "Sınav Takvimi";
}

<div class="announcement-modal">
    <div class="announcement-title">Sınav Takvimim</div>
    
    @if (ViewBag.UserDepartment != null)
    {
        <div class="schedule-info">
            <p class="department-info">
                <strong>Departman:</strong> @ViewBag.UserDepartment
            </p>
            @if (ViewBag.UserName != null)
            {
                <p class="student-info">
                    <strong>Öğrenci:</strong> @ViewBag.UserName
                </p>
            }
        </div>
    }

    @if (Model != null && Model.Count > 0)
    {
        <div class="announcement-list">
            @{
                var groupedExams = Model.GroupBy(e => e.Date.ToString("yyyy-MM-dd"))
                                       .OrderBy(g => g.Key)
                                       .ToList();
            }

            @foreach (var examGroup in groupedExams)
            {
                <div class="announcement-card">
                    <div class="announcement-header">
                        <div class="announcement-title-inner">
                            @DateTime.Parse(examGroup.Key).ToString("dd MMMM yyyy dddd", new System.Globalization.CultureInfo("tr-TR"))
                        </div>
                        <div class="announcement-date">
                            @examGroup.Count() Sınav
                        </div>
                    </div>
                    
                    @foreach (var exam in examGroup.OrderBy(e => e.Time))
                    {
                        <div class="exam-item">
                            <div class="exam-header">
                                <div class="exam-course">@exam.CourseName</div>
                                <div class="exam-type-badge exam-type-@exam.ExamType.ToLower()">@exam.ExamType</div>
                            </div>
                            <div class="exam-details">
                                <div class="exam-time">
                                    <i class="fas fa-clock"></i>
                                    @exam.Time.ToString(@"hh\:mm") - @exam.Time.Add(TimeSpan.FromMinutes(exam.Duration)).ToString(@"hh\:mm")
                                    <span class="exam-duration">(@exam.Duration dk)</span>
                                </div>
                                <div class="exam-location">
                                    <i class="fas fa-map-marker-alt"></i>
                                    @exam.Classroom
                                </div>
                                <div class="exam-instructor">
                                    <i class="fas fa-user-tie"></i>
                                    @exam.Instructor
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
        </div>

        <!-- Sınav İstatistikleri -->
        <div class="exam-stats">
            <div class="stat-card">
                <div class="stat-number">@Model.Count</div>
                <div class="stat-label">Toplam Sınav</div>
            </div>
            <div class="stat-card">
                <div class="stat-number">@Model.Where(e => e.ExamType == "Vize").Count()</div>
                <div class="stat-label">Vize Sınavı</div>
            </div>
            <div class="stat-card">
                <div class="stat-number">@Model.Where(e => e.ExamType == "Final").Count()</div>
                <div class="stat-label">Final Sınavı</div>
            </div>
        </div>
    }
    else
    {
        <div class="announcement-list">
            <div class="announcement-card">
                <div class="announcement-content">
                    @if (ViewBag.UserDepartment != null)
                    {
                        <text>@ViewBag.UserDepartment departmanı için henüz sınav takvimi oluşturulmamış.</text>
                    }
                    else
                    {
                        <text>Lütfen önce giriş yapınız.</text>
                    }
                    <br><br>
                    Detaylar için akademik biriminizle iletişime geçiniz.
                </div>
            </div>
        </div>
    }
</div>

<style>
/* Announcement ile aynı CSS stilleri + Sınav özel stilleri */
.schedule-info {
    text-align: center;
    margin-bottom: 20px;
    padding-bottom: 15px;
    border-bottom: 1px solid #b87efb33;
}

.department-info, .student-info {
    color: #e0d0ed;
    font-size: 1.1rem;
    margin: 5px 0;
}

.exam-item {
    margin-bottom: 18px;
    padding-bottom: 15px;
    border-bottom: 1px solid #5b397a33;
}

.exam-item:last-child {
    border-bottom: none;
    margin-bottom: 0;
}

.exam-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 12px;
    flex-wrap: wrap;
    gap: 10px;
}

.exam-course {
    font-size: 1.2rem;
    font-weight: 700;
    color: #ffe1f6;
    text-shadow: 0 2px 7px #ff69b486;
}

.exam-type-badge {
    padding: 6px 14px;
    border-radius: 20px;
    font-size: 0.85rem;
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.3);
}

.exam-type-vize {
    background: linear-gradient(135deg, #ff6b6b, #ff8e8e);
    color: white;
}

.exam-type-final {
    background: linear-gradient(135deg, #4ecdc4, #44a08d);
    color: white;
}

.exam-type-bütünleme {
    background: linear-gradient(135deg, #feca57, #ff9ff3);
    color: white;
}

.exam-details {
    display: flex;
    flex-direction: column;
    gap: 8px;
}

.exam-time, .exam-location, .exam-instructor {
    color: #e0d0ed;
    font-size: 1rem;
    display: flex;
    align-items: center;
    gap: 8px;
}

.exam-time i {
    color: #ff69b4;
}

.exam-location i {
    color: #b87efb;
}

.exam-instructor i {
    color: #feca57;
}

.exam-duration {
    color: #b87efb;
    font-size: 0.9rem;
    font-style: italic;
    margin-left: 5px;
}

/* Sınav İstatistikleri */
.exam-stats {
    display: flex;
    justify-content: center;
    gap: 20px;
    margin-top: 30px;
    flex-wrap: wrap;
}

.stat-card {
    background: rgba(50, 40, 70, 0.93);
    border: 1.5px solid #b87efb33;
    border-radius: 14px;
    padding: 20px;
    text-align: center;
    min-width: 120px;
    box-shadow: 0 4px 15px rgba(184, 126, 251, 0.2);
}

.stat-number {
    font-size: 2.5rem;
    font-weight: 800;
    color: #ff69b4;
    text-shadow: 0 2px 10px #ff69b488;
    margin-bottom: 5px;
}

.stat-label {
    color: #e0d0ed;
    font-size: 1rem;
    font-weight: 600;
}

/* Responsive */

    
    .exam-type-badge {
        align-self: flex-start;
    }

    .exam-stats {
        flex-direction: column;
        align-items: center;
    }

    .stat-card {
        min-width: 200px;
    }
}
</style>